#!/bin/sh

echo "üîç Running SwiftLint on staged files..."

# Find SwiftLint
SWIFTLINT_PATH=$(command -v swiftlint || echo "/opt/homebrew/bin/swiftlint")
if [ ! -x "$SWIFTLINT_PATH" ]; then
    SWIFTLINT_PATH="/usr/local/bin/swiftlint"
fi

if [ ! -x "$SWIFTLINT_PATH" ]; then
    echo "‚ùå SwiftLint not found! Install with: brew install swiftlint"
    exit 1
fi

# Get staged Swift files
staged_files=$(git diff --cached --name-only --diff-filter=ACM | grep '\.swift$')

if [ -z "$staged_files" ]; then
    echo "No Swift files staged for commit."
    exit 0
fi

echo "‚úÖ Found SwiftLint at: $SWIFTLINT_PATH"

# Create temp file for staged files list
STAGED_FILES_LIST=$(mktemp)
echo "$staged_files" > "$STAGED_FILES_LIST"

# Auto-fix staged files
echo "üîß Auto-fixing violations..."
"$SWIFTLINT_PATH" --fix --quiet --config ./.swiftlint.yml

# Re-stage auto-fixed files
git add $(echo "$staged_files")

# Lint staged files
echo "üîç Linting..."
"$SWIFTLINT_PATH" lint --strict --quiet --config ./.swiftlint.yml

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå SwiftLint found violations that couldn't be auto-fixed!"
    echo "Fix them manually or skip with: git commit --no-verify"
    rm "$STAGED_FILES_LIST"
    exit 1
fi

rm "$STAGED_FILES_LIST"
echo "‚úÖ SwiftLint passed!"
exit 0